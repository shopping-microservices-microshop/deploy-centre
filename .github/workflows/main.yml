name: Provision GitOps Environment

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Provision EC2 with Terraform
    runs-on: ubuntu-latest  # or ubuntu-latest if you donâ€™t yet have a self-hosted runner

    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      # Step 4: Terraform Init
      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      # Step 5: Terraform Plan
      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan \
          -var="runner_token=${{ secrets.RUNNER_TOKEN }}" \
          -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      # Step 6: Terraform Apply
      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve \
          -var="runner_token=${{ secrets.RUNNER_TOKEN }}" \
          -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      # Step 7: Show Public IP
      - name: Show EC2 Public IP
        working-directory: ./infra
        run: |
          terraform output -raw public_ip || echo "No public_ip output defined"
